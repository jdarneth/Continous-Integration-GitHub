name: Close release main

on:
  issues:
    types: [closed]

jobs:        
  auto-merge-main:
      name: "Close release main"
      runs-on: ubuntu-latest
      if: startsWith(github.event.issue.title, 'Release') && contains(github.event.issue.labels.*.name, 'release')
      
      steps:
      
        - name: Extract release version
          shell: bash
          run: |
            TITLE="${{ github.event.issue.title }}"
            VERSION=${TITLE#Release }
            echo "##[set-output name=version;]$(echo $VERSION)"
          id: extract_release_version
      
        - uses: actions/checkout@v3
          with: 
            ref: "release/${{ steps.extract_release_version.outputs.version }}"
            
        - name: Initialize mandatory git config
          run: |
            git config user.name "GitHub Web Flow"
            git config user.email "actions@github.com"
            git config --global --add safe.directory /github/workspace
                
        - name: create pull request for main
          id: open-pr-main
          uses: repo-sync/pull-request@v2.11
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            source_branch: "release/${{ steps.extract_release_version.outputs.version }}"
            destination_branch: main
            pr_title: "merge release into main"
            pr_body: "release finished: merge changes into main"
            pr_label: "automerge"

        - name: automerge PR for main
          id: automerge-main
          uses: "pascalgn/automerge-action@v0.15.5"
          env:
            GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
            PULL_REQUEST: ${{ steps.open-pr-main.outputs.pr_number }}
            MERGE_RETRIES: "3"
            MERGE_RETRY_SLEEP: "10000"
 
 
  create-release:
    needs: auto-merge-main
    name: "create release"
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'Release') && contains(github.event.issue.labels.*.name, 'release')

    steps:

      - name: Extract release version
        shell: bash
        run: |
          TITLE="${{ github.event.issue.title }}"
          VERSION=${TITLE#Release }
          echo "##[set-output name=version;]$(echo $VERSION)"
        id: extract_release_version

      - uses: actions/checkout@v3
        with: 
          ref: "release/${{ steps.extract_release_version.outputs.version }}"

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Web Flow"
          git config user.email "actions@github.com"
          git config --global --add safe.directory /github/workspace          
            
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with: 
          name: BLACKJACK-${{ steps.extract_release_version.outputs.branch }}
          path: build/libs/

      - name: create release
        uses: ncipollo/release-action@v1
        with:
          tag: "release/${{ steps.extract_release_version.outputs.version }}"
